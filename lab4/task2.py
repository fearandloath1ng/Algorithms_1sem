'''
Реализуйте работу очереди. Для каждой операции изъятия элемента выведите
ее результат.
На вход программе подаются строки, содержащие команды. Каждая строка
содержит одну команду. Команда — это либо «+ N», либо «–». 
Команда «+N» означает добавление в очередь числа N, по модулю не превышающего 10^9.
Команда «–» означает изъятие элемента из очереди. Гарантируется, что размер
очереди в процессе выполнения команд не превысит 10^6
элементов.
• Формат входного файла (input.txt). В первой строке содержится M (1 ≤M ≤ 10^6) – число команд. 
В последующих строках содержатся команды, по одной в каждой строке.
• Формат выходного файла (output.txt). Выведите числа, которые удаляются 
из очереди с помощью команды «–», по одному в каждой строке. Числа
нужно выводить в том порядке, в котором они были извлечены из очереди.
Гарантируется, что извлечения из пустой очереди не производится.
• Ограничение по времени. 2 сек.
• Ограничение по памяти. 256 мб.
'''

import time
 
t_start = time.perf_counter()

class Queue:
    def __init__(self):
        self.queue = []

    def enqueue(self, n):
        self.queue.append(n)

    def dequeue(self):
        return self.queue.pop(0)

queue = Queue()

with open("task2.txt", "r") as file:
    commands = file.readlines()[1:]

output = []
for command in commands:
    if command[0] == '+':
        n = int(command[2:])
        queue.enqueue(n)
    elif command[0] == '-':
        output.append(str(queue.dequeue()))

with open("output.txt", "w") as file:
    file.write("\n".join(output))

print("Время работы: %s секунд " % (time.perf_counter() - t_start))