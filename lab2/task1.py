'''
1. Используя псевдокод процедур Merge и Merge-sort из презентации 
к Лекции 2 (страницы 6-7), напишите программу сортировки слиянием на Python и
проверьте сортировку, создав несколько рандомных массивов, подходящих
под параметры:
• Формат входного файла (input.txt). В первой строке входного файла
содержится число n (1 ≤ n ≤ 2 · 10^4) — число элементов в массиве.
Во второй строке находятся n различных целых чисел, по модулю не
превосходящих 10^9.
• Формат выходного файла (output.txt). Одна строка выходного файла
с отсортированным массивом. Между любыми двумя числами должен
стоять ровно один пробел.
• Ограничение по времени. 2сек.
• Ограничение по памяти. 256 мб.
2. Для проверки можно выбрать наихудший случай, когда сортируется массив
размера 1000, 104, 105 чисел порядка 109, отсортированных в обратном
порядке; наилучший, когда массив уже отсортирован, и средний. Сравните,
например, с сортировкой вставкой на этих же данных.
3. Перепишите процедуру Merge так, чтобы в ней не использовались сигналь-
ные значения. Сигналом к остановке должен служить тот факт, что всеs
элементы массива L или R скопированы обратно в массив A, после чего в
этот массив копируются элементы, оставшиеся в непустом массиве.
или перепишите процедуру Merge (и, соответственно, Merge-sort) так, чтобы
в ней не использовались значения границ и середины - p, r и q.
'''

import time
 
t_start = time.perf_counter()

def merge_sort(array):
    if len(array) > 1:
        mid = len(array) // 2
        left_half = array[:mid]
        right_half = array[mid:]

        merge_sort(left_half)
        merge_sort(right_half)

        i = j = k = 0

        while i < len(left_half) and j < len(right_half):
            if left_half[i] < right_half[j]:
                array[k] = left_half[i]
                i += 1
            else:
                array[k] = right_half[j]
                j += 1
            k += 1

        while i < len(left_half):
            array[k] = left_half[i]
            i += 1
            k += 1

        while j < len(right_half):
            array[k] = right_half[j]
            j += 1
            k += 1

with open('task1.txt', 'r') as file:
    n = int(file.readline())
    array = list(map(int, file.readline().split()))

merge_sort(array)

with open('output.txt', 'w') as file:
    file.write(' '.join(map(str, array)))

print("Время работы: %s секунд " % (time.perf_counter() - t_start))