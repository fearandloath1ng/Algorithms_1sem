'''
Вычислить длину самой длинной общей подпоследовательности из трех последовательностей.
Даны три последовательности A = (a[1], a[2], ..., a[n]), B = (b[1], b[2], ..., b[m]) и 
C = (c[1], c[2], ..., c[l]), найти длину их самой длинной общей подпоследовательности, т.е.
наибольшее неотрицатеьное целое число p такое, что существуют индексы 
1 ≤ i[1] < i[2] < ... < i[p] ≤ n, 1 ≤ j[1] < j[2] < ... < j[p] ≤ m и 1 ≤ k[1] < k[2] < ... < k[p] ≤ l
такие, что a[i[1]] = b[j[1]] = c[k[1]], ..., a[i[p]] = b[j[p]] = c[k[p]].
• Формат ввода / входного файла (input.txt).
– Первая строка: n - длина первой последовательности.
– Вторая строка: a[1], a[2], ..., a[n] через пробел.
– Третья строка: m - длина второй последовательности.
– Четвертая строка: b[1], b[2], ..., b[m] через пробел.
– Пятая строка: l - длина второй последовательности.
– Шестая строка: c[1], c[2], ..., c[l] через пробел.
• Ограничения: 1 ≤ n, m, l ≤ 100; −10^9 < a[i], b[i], c[i] < 10^9.
• Формат вывода / выходного файла (output.txt). Выведите число p.
• Ограничение по времени. 1 сек.
'''

import time
 
t_start = time.perf_counter()



print("Время работы: %s секунд " % (time.perf_counter() - t_start))